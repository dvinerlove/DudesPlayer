<Application
    x:Class="DudesPlayer.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:DudesPlayer"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <!--  default lang  -->

                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.MahApps;component/Themes/MaterialDesignTheme.MahApps.Flyout.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.MahApps;component/Themes/MaterialDesignTheme.MahApps.Fonts.xaml" />-->

                <!--  MahApps  -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />-->

                <!--  Material Design Extansions  -->

                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignExtensions;component/Themes/MaterialDesignLightTheme.xaml" />-->
                <!--  Material Design  -->

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />

                <!--  Material Design: MahApps Compatibility  -->

                <ui:ControlsDictionary />
                <ui:ThemesDictionary Theme="Dark" />
            </ResourceDictionary.MergedDictionaries>

            <!--SolidColorBrush x:Key="PrymaryHeaderColor" Color="#d86f72"/>
            <SolidColorBrush x:Key="SecondaryBackgroundColor" Color="#f9d5d1"/>
            <SolidColorBrush x:Key="PrymaryBackgroundColor" Color="#d86f72"/>
            <SolidColorBrush x:Key="PrymaryFooterColor" Color="#f9d5d1"/>-->

            <SolidColorBrush x:Key="PrymaryPlayerColor" Color="#414141" />
            <SolidColorBrush x:Key="MyAccentColor" Color="#f98d54" />

            <SolidColorBrush x:Key="PrymaryHeaderColor" Color="#323232" />
            <SolidColorBrush x:Key="SecondaryBackgroundColor" Color="#FF616161" />
            <SolidColorBrush x:Key="PrymaryBackgroundColor" Color="#FF212121" />
            <SolidColorBrush x:Key="PrymaryFooterColor" Color="#FF474747" />




            <!--  MahApps Brushes  -->
            <SolidColorBrush x:Key="HighlightBrush" Color="{DynamicResource Primary700}" />
            <SolidColorBrush x:Key="AccentBaseColorBrush" Color="{DynamicResource Primary600}" />
            <SolidColorBrush x:Key="AccentColorBrush" Color="{DynamicResource Primary500}" />
            <SolidColorBrush x:Key="AccentColorBrush2" Color="{DynamicResource Primary400}" />
            <SolidColorBrush x:Key="AccentColorBrush3" Color="{DynamicResource Primary300}" />
            <SolidColorBrush x:Key="AccentColorBrush4" Color="{DynamicResource Primary200}" />
            <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{DynamicResource Primary700}" />
            <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="#26575757" />
            <!--<SolidColorBrush x:Key="AccentSelectedColorBrush" Color="{DynamicResource Primary500Foreground}"/>-->
            <LinearGradientBrush x:Key="ProgressBrush" StartPoint="1.002,0.5" EndPoint="0.001,0.5">
                <GradientStop Offset="0" Color="{DynamicResource Primary700}" />
                <GradientStop Offset="1" Color="{DynamicResource Primary300}" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="CheckmarkFill" Color="{DynamicResource Primary500}" />
            <SolidColorBrush x:Key="RightArrowFill" Color="{DynamicResource Primary500}" />
            <SolidColorBrush x:Key="IdealForegroundColorBrush" Color="#DDBFBFBF" />
            <SolidColorBrush x:Key="IdealForegroundClickColorBrush" Color="#DDDCDCDC" />
            <!--<SolidColorBrush x:Key="IdealForegroundColorBrush" Color="{DynamicResource Primary500Foreground}"/>-->
            <SolidColorBrush
                x:Key="IdealForegroundDisabledBrush"
                Opacity="0.4"
                Color="{DynamicResource Primary500}" />
            <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.OnSwitchBrush.Win10" Color="{DynamicResource Primary500}" />
            <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.OnSwitchMouseOverBrush.Win10" Color="{DynamicResource Primary400}" />
            <SolidColorBrush x:Key="MahApps.Metro.Brushes.ToggleSwitchButton.ThumbIndicatorCheckedBrush.Win10" Color="{DynamicResource Primary500Foreground}" />

            <Style x:Key="IconButton" TargetType="Button">
                <Setter Property="Background" Value="#00000000" />
                <Setter Property="Foreground" Value="#DDBFBFBF" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="Black"
                                BorderThickness="0"
                                CornerRadius="50">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#19FFFFFF" />
                        <Setter Property="Foreground" Value="#DDDCDCDC" />

                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <!--<Setter Property="Foreground" Value="#DDBFBFBF" />-->
                        <Setter Property="Background" Value="#24FFFFFF" />

                    </Trigger>

                </Style.Triggers>
            </Style>
            <Style x:Key="PanelButton" TargetType="Button">
                <Setter Property="Background" Value="#00000000" />
                <Setter Property="Foreground" Value="#DDBFBFBF" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="Black"
                                BorderThickness="0"
                                CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#19FFFFFF" />
                        <Setter Property="Foreground" Value="#DDDCDCDC" />

                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <!--<Setter Property="Foreground" Value="#DDBFBFBF" />-->
                        <Setter Property="Background" Value="#24FFFFFF" />

                    </Trigger>

                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Button}">
                <Setter Property="Focusable" Value="False" />
            </Style>
            <Style TargetType="{x:Type Grid}">
                <Setter Property="Focusable" Value="False" />
            </Style>

            <Style x:Key="MovableFloatingActionButton" TargetType="{x:Type Button}">
                <EventSetter Event="PreviewMouseDown" Handler="PreviewMouseDownEventHandler" />
                <EventSetter Event="PreviewMouseUp" Handler="PreviewMouseUpEventHandler" />
                <EventSetter Event="PreviewMouseMove" Handler="PreviewMouseMoveEventHandler" />

                <Setter Property="FontSize" Value="16" />
                <Setter Property="Width" Value="40" />
                <Setter Property="Height" Value="40" />
                <Setter Property="Foreground" Value="#00CCCC" />
                <Setter Property="Background" Value="#111111" />
                <Setter Property="BorderBrush" Value="#000000" />
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="2"
                                CornerRadius="20">
                                <Grid>
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Background="{TemplateBinding Background}"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{TemplateBinding Content}" />
                                    <Popup x:Name="myPopup" StaysOpen="False">
                                        <TextBlock
                                            Margin="15"
                                            Background="DarkGreen"
                                            FontSize="32"
                                            Foreground="White">
                                            HERE'S MY POPUP
                                        </TextBlock>
                                    </Popup>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Shake" TargetType="{x:Type Grid}">
                <Setter Property="RenderTransformOrigin" Value="0.5 0.5" />
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform />
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Button.MouseEnter">
                        <BeginStoryboard>
                            <Storyboard TargetProperty="RenderTransform.Angle">
                                <DoubleAnimation
                                    AutoReverse="True"
                                    FillBehavior="Stop"
                                    RepeatBehavior="3x"
                                    From="-15"
                                    To="15"
                                    Duration="0:0:0.05" />
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
